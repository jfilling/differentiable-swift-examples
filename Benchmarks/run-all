#! /bin/bash

# Install the pytorch environment (if needed) and run benchmark
echo "Running PyTorch benchmark ..."
if [ -f pytorch-cpu/bin/activate ]; then
    source pytorch-cpu/bin/activate
else
    python3 -m venv pytorch-cpu
    source pytorch-cpu/bin/activate
    pip install torch torchvision
fi
cd ./BuildingSimulation/PyTorch/
python3 PyTorchSimulator.py 2>&1 |tee ../../pytorch.txt
cd -
deactivate
echo "--------------------------------------------------------------------------------"

# Install the tensorflow environment (if needed) and run benchmark
echo "Running TensorFlow benchmark ..."
if [ -f tensorflow-cpu/bin/activate ]; then
    source tensorflow-cpu/bin/activate
else
    python3 -m venv tensorflow-cpu
    source tensorflow-cpu/bin/activate
    pip install tensorflow
fi
cd ./BuildingSimulation/TensorFlow/
python3 TensorFlowSimulator.py 2>&1 |tee ../../tensorflow.txt
cd -
deactivate
echo "--------------------------------------------------------------------------------"

# Compile and run Swift benchmark
echo "Running Swift benchmark ..."

if [[ "$OSTYPE" == "darwin"* ]]; then
    SWIFT=/Library/Developer/Toolchains/swift-DEVELOPMENT-SNAPSHOT-2023-12-07-a.xctoolchain/usr/bin/swift
else
    SWIFT=swift
fi

if [ ! -x $SWIFT ]; then
    echo "Missing $SWIFT"
else
    cd ./BuildingSimulation/Swift
    $SWIFT run -c release 2>&1 |tee ../../swift.txt
    cd -
fi
echo "--------------------------------------------------------------------------------"

echo -n "PyTorch "
grep gradient pytorch.txt | cut -d' ' -f8

echo -n "TensorFlow "
grep gradient tensorflow.txt | cut -d' ' -f8

echo -n "Swift "
grep gradient swift.txt | cut -d' ' -f7

